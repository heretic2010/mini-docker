---
- name: STORAGE | Import assert.yml
  ansible.builtin.import_tasks: assert.yml
  run_once: true
  delegate_to: localhost

- name: STORAGE | Initialized MINIO project directory.
  block:
    - name: STORAGE | Check MinIO initial directory
      ansible.builtin.stat:
        path: "{{ minio_docker_project_location }}"
      register: minio_init_dir

    - name: STORAGE | Create minio project directory
      ansible.builtin.file:
        path: "{{ minio_docker_project_location }}"
        state: directory
        mode: "0755"
        recurse: true
      when: not minio_init_dir.stat.exists

    # - name: create directories for minio if they don't exist
    #   file:
    #     path: "{{ item }}"
    #     state: directory
    #     owner: root
    #     group: root
    #     mode: "0775"
    #   loop:
    #     - /minio/disc1
    #     - /minio/disc2
    #     - /minio/disc3
    #     - /minio/disc4

    - name: Configure MinIO data disks /etc/fstab and mount them
      ansible.posix.mount:
        path: "/mnt/{{ item.dir }}"
        src: "LABEL={{ item.label }}"
        fstype: xfs
        opts: defaults,noatime,auto
        dump: 0
        passno: 2
        state: mounted
      with_items:
        - { dir: 'disk1', label: 'DISK1' }
        - { dir: 'disk2', label: 'DISK2' }
        - { dir: 'disk3', label: 'DISK3' }
        - { dir: 'disk4', label: 'DISK4' }


    - name: Create MinIO tenant directories on the data disks
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      with_items:
        - /mnt/disk1/infra
        - /mnt/disk2/infra
        - /mnt/disk3/infra
        - /mnt/disk4/infra

  rescue:
    - name: STORAGE | Initialized MINIO project errors
      ansible.builtin.debug:
        msg: "I caught an error, can do stuff here to fix it, :-)"

- name: STORAGE | Setup MINIO project.
  block:
    - name: STORAGE | Check MinIO initial directory
      ansible.builtin.stat:
        path: "{{ minio_docker_project_location }}"
      register: minio_dir

    - name: STORAGE | Create minio persistent data directory.
      ansible.builtin.file:
        path: "{{ minio_docker_project_location }}/data"
        state: directory
        mode: "0755"
        recurse: true
      when:
        - minio_dir.stat.exists
        - minio_dir.stat.isdir

    - name: STORAGE | Copy MinIO docker compose variables
      ansible.builtin.template:
        src: compose.j2
        dest: "{{ minio_docker_project_location }}/docker-compose.yml"
        mode: "0644"
        lstrip_blocks: true
        force: true
      register: copy_compose
      when:
        - minio_dir.stat.exists
        - minio_dir.stat.isdir

    - name: STORAGE | Get infos on container
      community.docker.docker_container_info:
        name: "{{ minio_docker_service_name }}"
      register: minio_container

    - name: STORAGE | Check docker compose file
      ansible.builtin.stat:
        path: "{{ minio_docker_project_location }}/docker-compose.yml"
      register: compose_file

    - name: STORAGE | Stop `docker-compose down` MinIO
      community.docker.docker_compose:
        project_src: "{{ minio_docker_project_location }}"
        state: absent
        remove_orphans: true
      become: true
      register: continer_stop
      when:
        - minio_container.exists
        - copy_compose.changed
    
    - name: Run `docker compose up` again
      community.docker.docker_compose_v2:
        project_src: "{{ minio_docker_project_location }}"
        build: always
      register: output
      when: (not minio_container.exists and minio_dir.stat.isdir and compose_file.stat.exists) or continer_stop.changed


    # - name: STORAGE | Run `docker-compose up` MinIO
    #   community.docker.docker_compose:
    #     project_src: "{{ minio_docker_project_location }}"
    #     build: true
    #   when: (not minio_container.exists and minio_dir.stat.isdir and compose_file.stat.exists) or continer_stop.changed

  #   - name: Creates an entry like "@reboot docker compose minio"
  #     ansible.builtin.cron:
  #       name: "a job for reboot"
  #       special_time: reboot
  #       job: "/usr/local/bin/docker compose -f /home/minio/docker-compose.yml up -d"
  #     when:
  #       - compose_file.stat.exists

  # rescue:
  #   - name: STORAGE | Setup MINIO project errors
  #     ansible.builtin.debug:
  #       msg: "I caught an error, can do stuff here to fix it, :-)"
